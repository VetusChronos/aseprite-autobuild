name: Build and Release Aseprite

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            g++ cmake ninja-build libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev curl unzip

      - name: Download Skia
        run: |
          SKIA_VERSION=m102-861e4743af
          SKIA_URL=https://github.com/aseprite/skia/releases/download/${SKIA_VERSION}/Skia-Linux-Release-x64-libstdc++.zip
          curl -L $SKIA_URL -o skia.zip
          unzip skia.zip -d skia

      - name: Clone Aseprite
        run: |
          git clone --recursive https://github.com/aseprite/aseprite.git
          mkdir -p aseprite/build

      - name: Configure and Build Aseprite
        run: |
          cd aseprite/build
          cmake \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DLAF_BACKEND=skia \
            -DSKIA_DIR=../../skia \
            -DSKIA_LIBRARY_DIR=../../skia/out/Release-x64 \
            -G Ninja ..
          ninja aseprite

      - name: Archive Aseprite
        run: |
          cd aseprite/build/bin
          tar -czvf aseprite.tar.gz aseprite

      - name: Create GitHub Release
        id: create_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `aseprite-${new Date().toISOString().split('T')[0]}`,
              name: `Aseprite Build - ${new Date().toISOString().split('T')[0]}`,
              draft: false,
              prerelease: false,
            });
            core.setOutput("upload_url", release.upload_url);
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: aseprite/build/bin/aseprite.tar.gz
          asset_name: aseprite.tar.gz
          asset_content_type: application/gzip
