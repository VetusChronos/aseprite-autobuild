name: Build and deploy Asepritee

on:
  schedule:
    - cron: '0 12 * * *'
  # workflow_dispatch:

env:
  BUILD_TYPE: Release
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build-aseprite:
    name: Build Aseprite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
      fail-fast: false
    steps:
      - name: Checkout Aseprite source code
        uses: actions/checkout@v2
        with:
          repository: aseprite/aseprite
          ref: main
          submodules: true

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install -y cmake ninja git
          choco install -y visualstudio2019buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools"
          choco install -y windows-sdk-10.1
          refreshenv

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ cmake ninja-build libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install cmake ninja

      - name: Download and extract Skia
        run: |
          SKIA_VERSION=aseprite-m102
          SKIA_URL=https://github.com/aseprite/skia/releases/download/${SKIA_VERSION}/Skia-${{ matrix.os }}-Release-x64.zip
          curl -L $SKIA_URL -o skia.zip
          unzip skia.zip -d skia

      - name: Configure build with CMake
        run: |
          mkdir -p build
          cd build
          cmake \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
            -DLAF_BACKEND=skia \
            -DSKIA_DIR=../skia \
            -DSKIA_LIBRARY_DIR=../skia/out/Release-x64 \
            -G Ninja \
            ..

      - name: Build Aseprite
        run: |
          cd build
          ninja aseprite

      - name: Package Aseprite (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd build/bin
          7z a Aseprite-${{ env.BUILD_TYPE }}-windows.zip *

      - name: Package Aseprite (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd build/bin
          tar -czvf Aseprite-${{ env.BUILD_TYPE }}-linux.tar.gz *

      - name: Package Aseprite (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd build/bin
          zip -r Aseprite-${{ env.BUILD_TYPE }}-macos.zip *

      - name: Upload Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: |
            build/bin/Aseprite-${{ env.BUILD_TYPE }}-windows.zip
            build/bin/Aseprite-${{ env.BUILD_TYPE }}-linux.tar.gz
            build/bin/Aseprite-${{ env.BUILD_TYPE }}-macos.zip
          tag: ${{ github.ref }}
