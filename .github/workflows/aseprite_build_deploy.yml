name: Build and Release Aseprite

on:
  push:
    branches:
      - main
  tags:
    - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            g++ \
            cmake \
            ninja-build \
            libx11-dev \
            libxcursor-dev \
            libxi-dev \
            libgl1-mesa-dev \
            libfontconfig1-dev \
            curl \
            unzip

      - name: Download Aseprite source code
        run: |
          mkdir -p deps/aseprite
          curl -L https://github.com/aseprite/aseprite/archive/refs/tags/v1.3.10.1.zip -o aseprite.zip
          unzip aseprite.zip -d deps/aseprite
          mv deps/aseprite/aseprite-1.3.10.1/* deps/aseprite/
          rm -rf deps/aseprite/aseprite-1.3.10.1
          rm aseprite.zip

      - name: Download Skia
        run: |
          mkdir -p deps/skia
          curl -L https://github.com/aseprite/skia/releases/download/m102-861e4743af/Skia-Linux-Release-x64.zip -o skia.zip
          unzip skia.zip -d deps/skia
          rm skia.zip

      - name: Build Aseprite
        run: |
          mkdir -p deps/aseprite/build
          cd deps/aseprite/build
          cmake \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo \
            -DLAF_BACKEND=skia \
            -DSKIA_DIR=../../skia \
            -DSKIA_LIBRARY_DIR=../../skia/out/Release-x64 \
            -G Ninja ..
          ninja aseprite

      - name: Prepare release assets
        run: |
          mkdir -p release
          cp deps/aseprite/build/bin/aseprite release/
          tar -czvf aseprite-linux.tar.gz -C release aseprite

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./aseprite-linux.tar.gz
          asset_name: aseprite-linux.tar.gz
          asset_content_type: application/gzip
